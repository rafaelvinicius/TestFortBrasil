{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelvinicius/Desktop/dev/testfort/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport InputMask from 'react-input-mask';\nimport { ServerURL } from \"./Componentes/Config\";\nimport { AlertForm } from \"./Componentes/Funcoes\";\nimport CabecalhoPagina from \"./Componentes/Cabecalho\";\nimport Carregando from \"./Componentes/Carregando\";\nimport { Coluna, CampoEmail, CampoSenha, FormCadastrar, BotaoCadastrar } from './Estilos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    control,\n    setValue\n  } = useForm();\n  const [Loading, setLoading] = useState(false);\n  const [NomeEvento, setNomeEvento] = useState(\"Test FortBrasil\");\n\n  const onSubmit = async (data, e) => {\n    setLoading(true);\n\n    if (data.c_email == \"\" || data.c_email == undefined) {\n      //console.log('passou');\n      AlertForm('O campo E-MAIL é de preenchimento obrigatório!');\n      setLoading(false);\n      e.preventDefault();\n    } else if (data.c_senha == \"\" || data.c_senha == undefined) {\n      //console.log('passou');\n      AlertForm('O campo SENHA é de preenchimento obrigatório!');\n      setLoading(false);\n      e.preventDefault();\n    } else if (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(data.c_email)) {\n      if (data.c_email !== \"\" && data.c_email !== undefined && data.c_senha == \"\" || data.c_senha == undefined) {\n        setLoading(true);\n        var Email = data.c_email.toLowerCase();\n        var Senha = data.c_senha;\n        const response = await fetch(ServerURL + '/Login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            c_email: Email.replace(' ', ''),\n            c_senha: Senha\n          })\n        });\n        const jsonResult = await response.json();\n        console.log(jsonResult);\n\n        if (jsonResult.auth == true) {\n          localStorage.setItem(\"c_nome\", jsonResult.c_nome);\n          localStorage.setItem(\"c_email\", jsonResult.c_email);\n          localStorage.setItem(\"c_id\", jsonResult.c_id_user);\n          localStorage.setItem(\"LogadoToken\", jsonResult.c_token);\n          let ListaConfig = JSON.stringify({\n            c_email: jsonResult.c_email,\n            c_token: jsonResult.c_token\n          });\n          history.push({\n            pathname: 'live',\n            state: {}\n          });\n          setLoading(false);\n        } else {\n          AlertForm('E-mail não cadastrado!');\n          setLoading(false);\n        }\n      }\n    } else {\n      AlertForm('O campo E-MAIL está com o formato incorreto!');\n      setLoading(false);\n      e.preventDefault();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CabecalhoPagina, {\n      NomeEvento: NomeEvento\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), Loading === true ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(FormCadastrar, {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Coluna, {\n        children: [/*#__PURE__*/_jsxDEV(CampoEmail, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            ref: register,\n            id: \"c_email\",\n            name: \"c_email\",\n            type: \"email\",\n            placeholder: 'E-mail',\n            className: \"CampoForm CampoFormLogin\",\n            as: InputMask,\n            mask: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CampoSenha, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            ref: register,\n            id: \"c_senha\",\n            name: \"c_senha\",\n            type: \"password\",\n            placeholder: 'Senha',\n            className: \"CampoForm CampoFormLogin\",\n            as: InputMask,\n            mask: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BotaoCadastrar, {\n          type: \"submit\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"V06Fvlnhc1Q1Pzv9CpEd5sOtr6g=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/rafaelvinicius/Desktop/dev/testfort/src/Login.js"],"names":["React","useEffect","useState","Redirect","useHistory","useForm","Controller","InputMask","ServerURL","AlertForm","CabecalhoPagina","Carregando","Coluna","CampoEmail","CampoSenha","FormCadastrar","BotaoCadastrar","Login","history","register","handleSubmit","errors","control","setValue","Loading","setLoading","NomeEvento","setNomeEvento","onSubmit","data","e","c_email","undefined","preventDefault","c_senha","test","Email","toLowerCase","Senha","response","fetch","method","headers","body","JSON","stringify","replace","jsonResult","json","console","log","auth","localStorage","setItem","c_nome","c_id_user","c_token","ListaConfig","push","pathname","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport InputMask from 'react-input-mask';\nimport { ServerURL } from \"./Componentes/Config\";\nimport { AlertForm } from \"./Componentes/Funcoes\";\nimport CabecalhoPagina from \"./Componentes/Cabecalho\";\nimport Carregando from \"./Componentes/Carregando\";\n\nimport {\n  Coluna,\n  CampoEmail,\n  CampoSenha,\n  FormCadastrar,\n  BotaoCadastrar\n} from './Estilos'\n\nfunction Login() {\n\n  const history = useHistory();\n  const { register, handleSubmit, errors, control, setValue } = useForm();\n  const [ Loading, setLoading ] = useState(false);\n  const [ NomeEvento, setNomeEvento ] = useState(\"Test FortBrasil\");\n\n  const onSubmit = async (data, e) => {  \n      \n      setLoading(true);\n\n      if(data.c_email == \"\" || data.c_email == undefined){\n        //console.log('passou');\n        AlertForm('O campo E-MAIL é de preenchimento obrigatório!');\n        setLoading(false);\n        e.preventDefault();\n      }\n\n      else if(data.c_senha == \"\" || data.c_senha == undefined){\n        //console.log('passou');\n        AlertForm('O campo SENHA é de preenchimento obrigatório!');\n        setLoading(false);\n        e.preventDefault();\n      }\n\n      else if (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(data.c_email)) { \n\n      if(data.c_email !== \"\" && data.c_email !== undefined && data.c_senha == \"\" || data.c_senha == undefined){\n\n        setLoading(true);\n        var Email = data.c_email.toLowerCase();\n        var Senha = data.c_senha;\n\n        const response = await fetch(ServerURL + '/Login', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            c_email: Email.replace(' ', ''),\n            c_senha: Senha\n          }),\n        });\n\n        const jsonResult = await response.json();\n        console.log(jsonResult);\n\n        if(jsonResult.auth == true){\n              \n            localStorage.setItem(\"c_nome\", jsonResult.c_nome);\n            localStorage.setItem(\"c_email\", jsonResult.c_email);\n            localStorage.setItem(\"c_id\", jsonResult.c_id_user);\n            localStorage.setItem(\"LogadoToken\", jsonResult.c_token);\n\n            let ListaConfig = JSON.stringify({\n              c_email: jsonResult.c_email,\n              c_token: jsonResult.c_token            \n            });\n            \n            history.push({\n              pathname: 'live',\n              state: {}\n            });\n\n            setLoading(false);\n\n        } else {\n\n          AlertForm('E-mail não cadastrado!');\n          setLoading(false);  \n\n        }\n\n      }\n\n    } else {\n\n      AlertForm('O campo E-MAIL está com o formato incorreto!');\n      setLoading(false);\n      e.preventDefault();\n\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <CabecalhoPagina NomeEvento={NomeEvento} />\n\n      {Loading === true ? <Carregando /> : null }\n\n      <FormCadastrar onSubmit={handleSubmit(onSubmit)}>\n\n        <Coluna>\n\n          <CampoEmail>\n            <Controller\n              control={control}\n              ref={register}\n              id=\"c_email\"\n              name=\"c_email\"\n              type=\"email\"\n              placeholder={'E-mail'}\n              className=\"CampoForm CampoFormLogin\"\n              as={InputMask}\n              mask=\"\"\n            />\n          </CampoEmail>\n\n          <CampoSenha>\n            <Controller\n              control={control}\n              ref={register}\n              id=\"c_senha\"\n              name=\"c_senha\"\n              type=\"password\"\n              placeholder={'Senha'}\n              className=\"CampoForm CampoFormLogin\"\n              as={InputMask}\n              mask=\"\"\n            />\n          </CampoSenha>\n\n          <BotaoCadastrar type=\"submit\">Entrar</BotaoCadastrar>\n\n        </Coluna>\n\n      </FormCadastrar>\n\n    </>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}